<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (C) 2016 Compassion (http://www.compassion.ch)
    @author Emanuel Cino <ecino@compassion.ch>
    The licence is in the file __manifest__.py
-->
<openerp>
    <data>
        <!-- Workflow header -->
        <record model="workflow" id="wkf_compassion_child">
            <field name="name">compassion.child.wkf</field>
            <field name="osv">compassion.child</field>
            <field name="on_create" eval='True'/>
        </record>

        <!-- Workflow activities (what is done when state is reached) -->
        <record model="workflow.activity" id="act_waiting">
            <field name="wkf_id" ref="wkf_compassion_child"/>
            <field name="flow_start" eval='True'/>
            <field name="name">waiting</field>
            <field name="kind">function</field>
            <field name="action">child_waiting_hold()</field>
        </record>

        <record model="workflow.activity" id="act_consigned">
            <field name="wkf_id" ref="wkf_compassion_child"/>
            <field name="name">consigned</field>
            <field name="kind">function</field>
            <field name="action">child_consigned()</field>
            <field name="flow_start" eval='False'/>
        </record>

        <record model="workflow.activity" id="act_sponsored">
            <field name="wkf_id" ref="wkf_compassion_child"/>
            <field name="name">sponsored</field>
            <field name="kind">function</field>
            <field name="action">child_sponsored()</field>
        </record>

        <record model="workflow.activity" id="act_released">
            <field name="wkf_id" ref="wkf_compassion_child"/>
            <field name="name">released</field>
            <field name="kind">function</field>
            <field name="action">child_released()</field>
        </record>

        <record model="workflow.activity" id="act_departed">
            <field name="wkf_id" ref="wkf_compassion_child"/>
            <field name="name">departed</field>
            <field name="kind">function</field>
            <field name="flow_stop" eval='True'/>
            <field name="action">child_departed()</field>
        </record>

        <!-- Workflow transitions (how are states reached) -->
        <record model="workflow.transition" id="has_hold">
            <field name="act_from" ref="act_waiting"/>
            <field name="act_to" ref="act_consigned"/>
            <field name="condition">hold_id and hold_id.hold_id</field>
        </record>

        <record model="workflow.transition" id="get_sponsor">
            <field name="act_from" ref="act_consigned"/>
            <field name="act_to" ref="act_sponsored"/>
            <field name="condition">sponsor_id</field>
        </record>

        <record model="workflow.transition" id="lose_sponsor">
            <field name="act_from" ref="act_sponsored"/>
            <field name="act_to" ref="act_waiting"/>
            <field name="signal">release</field>
            <field name="condition">hold_id</field>
        </record>

        <record model="workflow.transition" id="waiting_fail">
            <field name="act_from" ref="act_waiting"/>
            <field name="act_to" ref="act_released"/>
            <field name="signal">release</field>
        </record>

        <record model="workflow.transition" id="sponsor_cancel">
            <field name="act_from" ref="act_sponsored"/>
            <field name="act_to" ref="act_released"/>
            <field name="signal">release</field>
            <field name="condition">not hold_id and (not lifecycle_ids or 'Exit' not in lifecycle_ids[0].type)</field>
        </record>

        <record model="workflow.transition" id="release">
            <field name="act_from" ref="act_consigned"/>
            <field name="act_to" ref="act_released"/>
            <field name="signal">release</field>
        </record>

        <record model="workflow.transition" id="pull_back">
            <field name="act_from" ref="act_released"/>
            <field name="act_to" ref="act_waiting"/>
            <field name="condition">hold_id</field>
        </record>

        <record model="workflow.transition" id="depart">
            <field name="act_from" ref="act_sponsored"/>
            <field name="act_to" ref="act_departed"/>
            <field name="signal">release</field>
            <field name="condition">not hold_id and lifecycle_ids and 'Exit' in lifecycle_ids[0].type</field>
        </record>

        <record model="workflow.transition" id="depart_after_release">
            <field name="act_from" ref="act_released"/>
            <field name="act_to" ref="act_departed"/>
            <field name="signal">release</field>
            <field name="condition">lifecycle_ids and 'Exit' in lifecycle_ids[0].type</field>
        </record>
    </data>
</openerp>
