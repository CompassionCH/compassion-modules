<odoo>
    <!-- Server Action to update intervention to active -->
    <record id="action_intervention_active" model="ir.actions.server">
        <field name="name">Intervention: Make active after start date</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="state">code</field>
        <field name="usage">base_automation</field>
        <field name="code">records.write({'state': 'active'})</field>
    </record>

    <!-- Automation rule to make intervention active after start date -->
    <record id="intervention_active_check" model="base.automation">
        <field name="name">Intervention: Make active after start date</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="trigger">on_time</field>
        <field
      name="trg_date_id"
      ref="field_compassion_intervention__start_date"
    />
        <field name="trg_date_range">0</field>
        <field name="trg_date_range_type">day</field>
        <field
      name="filter_domain"
    >[('state', '=', 'committed'), ('start_date', '!=', False)]</field>
        <field
      name="action_server_ids"
      eval="[(6, 0, [ref('action_intervention_active')])]"
    />
    </record>

    <!-- Server Action to update intervention to close -->
   <record id="action_intervention_close" model="ir.actions.server">
        <field name="name">Intervention: Close after end date</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="state">code</field>
        <field name="usage">base_automation</field>
        <field name="code">records.write({'state': 'close'})</field>
    </record>

    <!-- Automation rule to close intervention after end date -->
    <record id="intervention_close_check" model="base.automation">
        <field name="name">Intervention: Close after end date</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="trigger">on_time</field>
        <field
      name="trg_date_id"
      ref="field_compassion_intervention__end_date"
    />
        <field name="trg_date_range">0</field>
        <field name="trg_date_range_type">day</field>
        <field name="filter_domain">[('end_date', '!=', False)]</field>
        <field
      name="action_server_ids"
      eval="[(6, 0, [ref('action_intervention_close')])]"
    />
    </record>
    <!-- Server Action to set SLA negotiation state to done -->
    <record id="action_sla_done" model="ir.actions.server">
        <field name="name">Intervention: Check SLA Negotiation done</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="state">code</field>
        <field name="usage">base_automation</field>
        <field name="code">records.write({'state': 'on_hold'})</field>
    </record>

    <!-- Automation rule for SLA negotiation done -->
    <record id="intervention_sla_check_done" model="base.automation">
        <field name="name">Intervention: Check SLA Negotiation done</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="trigger">on_create_or_write</field>
        <field
      name="filter_domain"
    >[('state', '=', 'sla'), '|', '&amp;', ('service_level', '=', 'Level 2'), ('sla_selection_complete', '=', True), ('sla_negotiation_status', '=', 'GP Accepted Costs')]</field>
        <field
      name="action_server_ids"
      eval="[(6, 0, [ref('action_sla_done')])]"
    />
    </record>

    <!-- Server Action to set intervention state to SLA waiting -->
    <record id="action_sla_wait" model="ir.actions.server">
        <field name="name">Intervention: Check SLA Negotiation waiting</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="state">code</field>
        <field name="usage">base_automation</field>
        <field name="code">records.write({'state': 'sla'})</field>
    </record>

    <!-- Automation rule for SLA negotiation waiting -->
    <record id="intervention_sla_check_wait" model="base.automation">
        <field name="name">Intervention: Check SLA Negotiation waiting</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="trigger">on_create_or_write</field>
        <field
      name="filter_domain"
    >[('state', '=', 'on_hold'), ('service_level', '=', 'Level 2'),('sla_selection_complete', '=', False)]</field>
        <field
      name="action_server_ids"
      eval="[(6, 0, [ref('action_sla_wait')])]"
    />
    </record>

    <!-- Server Action for notification before intervention on hold expires -->
    <record id="action_notify_before_expire" model="ir.actions.server">
        <field name="name">Intervention: Notify before on hold expires</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="state">next_activity</field>
        <field name="usage">base_automation</field>
        <field name="activity_type_id" ref="mail.mail_activity_data_todo" />
        <field
      name="activity_summary"
    >On Hold intervention close to expiration date</field>
        <field
      name="activity_note"
    >An Intervention you are assigned to is close to reaching its expiration date while still On Hold.</field>
        <field name="activity_user_type">generic</field>
        <field name="activity_user_field_name">user_id</field>
    </record>

    <!-- Automation rule to send notification before intervention expires -->
    <record id="intervention_notif_before_expire" model="base.automation">
        <field
      name="name"
    >Intervention: Send notification before intervention on hold expires</field>
        <field name="model_id" ref="model_compassion_intervention" />
        <field name="trigger">on_time</field>
        <field
      name="trg_date_id"
      ref="field_compassion_intervention__expiration_date"
    />
        <field name="trg_date_range">-7</field>
        <field name="trg_date_range_type">day</field>
        <field name="filter_domain">[('state', '=', 'on_hold')]</field>
        <field
      name="action_server_ids"
      eval="[(6, 0, [ref('action_notify_before_expire')])]"
    />
    </record>
</odoo>
