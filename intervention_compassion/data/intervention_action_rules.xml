<odoo>
    <!-- Write state active on interventions -->
    <record id="active_action_state_field" model="ir.server.object.lines">
        <field name="col1" ref="field_compassion_intervention__state"/>
        <field name="type">value</field>
        <field name="value">active</field>
    </record>
    <!-- Rule for setting Intervention active after start_date -->
    <record id="intervention_active_check" model="base.automation">
        <field name="name">Intervention: Make active after start date</field>
        <field name="model_id" ref="model_compassion_intervention"/>
        <field name="trigger">on_time</field>
        <field name="trg_date_id" ref="field_compassion_intervention__start_date"/>
        <field name="filter_domain">[('state', '=', 'committed')]</field>
        <field name="trg_date_range">0</field>
        <field name="trg_date_range_type">day</field>
        <field name="state">object_write</field>
        <field name="fields_lines" eval="[(4, ref('active_action_state_field'))]"/>
    </record>

    <!-- Write state close on interventions -->
    <record id="close_action_state_field" model="ir.server.object.lines">
        <field name="col1" ref="field_compassion_intervention__state"/>
        <field name="type">value</field>
        <field name="value">close</field>
    </record>
    <!-- Rule for setting Intervention close after end_date -->
    <record id="intervention_close_check" model="base.automation">
        <field name="name">Intervention: Close after end date</field>
        <field name="model_id" ref="model_compassion_intervention"/>
        <field name="trigger">on_time</field>
        <field name="trg_date_id" ref="field_compassion_intervention__end_date"/>
        <field name="trg_date_range">0</field>
        <field name="trg_date_range_type">day</field>
        <field name="state">object_write</field>
        <field name="fields_lines" eval="[(4, ref('close_action_state_field'))]"/>
    </record>

    <!-- Write SLA state on interventions -->
    <record id="sla_done_action_field" model="ir.server.object.lines">
        <field name="col1" ref="field_compassion_intervention__state"/>
        <field name="type">value</field>
        <field name="value">on_hold</field>
    </record>
    <!-- Rule for checking SLA Negociation -->
    <record id="intervention_sla_check_done" model="base.automation">
        <field name="name">Intervention: Check SLA Negociation done</field>
        <field name="model_id" ref="model_compassion_intervention"/>
        <field name="trigger">on_create_or_write</field>
        <field name="filter_domain">[('state', '=', 'sla'), '|', '&amp;', ('service_level', '=', 'Level 2'), ('sla_selection_complete', '=', True), ('sla_negotiation_status', '=', 'GP Accepted Costs')]</field>
        <field name="state">object_write</field>
        <field name="fields_lines" eval="[(4, ref('sla_done_action_field'))]"/>
    </record>

    <record id="sla_wait_action_field" model="ir.server.object.lines">
        <field name="col1" ref="field_compassion_intervention__state"/>
        <field name="type">value</field>
        <field name="value">sla</field>
    </record>
    <record id="intervention_sla_check_wait" model="base.automation">
        <field name="name">Intervention: Check SLA Negociation waiting</field>
        <field name="model_id" ref="model_compassion_intervention"/>
        <field name="trigger">on_create_or_write</field>
        <field name="filter_domain">[('state', '=', 'on_hold'), ('service_level', '=', 'Level 2'), ('sla_selection_complete', '=', False)]</field>
        <field name="state">object_write</field>
        <field name="fields_lines" eval="[(4, ref('sla_wait_action_field'))]"/>
    </record>
</odoo>
